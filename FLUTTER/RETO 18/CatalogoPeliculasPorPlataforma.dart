void main(){
  // 2. Declara un Map<String, List<Pelicula>> para cat√°logo streaming
  print("\n1Ô∏è‚É£ Creando cat√°logo de streaming...");
  Map<String, List<Pelicula>> catalogoStreaming = {
    'Netflix': <Pelicula>[],
    'HBO': <Pelicula>[],
    'Disney+': <Pelicula>[]
  };
  print("   ‚úì Cat√°logo creado con plataformas: ${catalogoStreaming.keys.toList()}");
  
  // 3. Agrega al menos dos pel√≠culas a cada plataforma
  print("\n2Ô∏è‚É£ Agregando pel√≠culas a cada plataforma...");
  
  // Netflix
  catalogoStreaming['Netflix']!.addAll([
    Pelicula("Stranger Things", 2016),
    Pelicula("The Crown", 2016),
    Pelicula("Squid Game", 2021)
  ]);
  
  // HBO
  catalogoStreaming['HBO']!.addAll([
    Pelicula("Game of Thrones", 2011),
    Pelicula("The Last of Us", 2023),
    Pelicula("House of the Dragon", 2022)
  ]);
  
  // Disney+
  catalogoStreaming['Disney+']!.addAll([
    Pelicula("The Mandalorian", 2019),
    Pelicula("WandaVision", 2021)
  ]);
  
  print("   ‚úì Pel√≠culas agregadas a todas las plataformas");
  
  // 4. Imprime los t√≠tulos de todas las pel√≠culas disponibles en Netflix
  print("\n3Ô∏è‚É£ Mostrando pel√≠culas de Netflix...");
  print("   üî¥ NETFLIX:");
  for (Pelicula pelicula in catalogoStreaming['Netflix']!) {
    print("      ‚Ä¢ ${pelicula.titulo}");
  }
  
  // 5. Agrega una pel√≠cula nueva a Disney+
  print("\n4Ô∏è‚É£ Agregando nueva pel√≠cula a Disney+...");
  Pelicula nuevaPeliculaDisney = Pelicula("Loki", 2021);
  catalogoStreaming['Disney+']!.add(nuevaPeliculaDisney);
  print("   ‚úì Pel√≠cula agregada a Disney+: ${nuevaPeliculaDisney.titulo}");
  
  // 6. Cambia el a√±o de estreno de una pel√≠cula en HBO
  print("\n5Ô∏è‚É£ Modificando a√±o de estreno en HBO...");
  Pelicula peliculaHBO = catalogoStreaming['HBO']!.firstWhere((p) => p.titulo == "Game of Thrones");
  int anioAnterior = peliculaHBO.anioEstreno;
  peliculaHBO.anioEstreno = 2010; // Cambiar el a√±o
  print("   ‚úì '${peliculaHBO.titulo}': $anioAnterior ‚Üí ${peliculaHBO.anioEstreno}");
  
  // 7. Elimina una pel√≠cula de Netflix
  print("\n6Ô∏è‚É£ Eliminando pel√≠cula de Netflix...");
  Pelicula peliculaEliminada = catalogoStreaming['Netflix']!.removeAt(1); // Elimina "The Crown"
  print("   ‚úì Pel√≠cula eliminada de Netflix: ${peliculaEliminada.titulo}");
  
  // 8. Recorre todo el mapa y muestra el cat√°logo completo
  print("\n7Ô∏è‚É£ Mostrando cat√°logo completo actualizado...");
  
  Map<String, String> iconos = {
    'Netflix': 'üî¥',
    'HBO': '‚ö´',
    'Disney+': 'üîµ'
  };
  
  catalogoStreaming.forEach((plataforma, peliculas) {
    print("\n   ${iconos[plataforma]} $plataforma (${peliculas.length} t√≠tulos):");
    if (peliculas.isEmpty) {
      print("      (Sin pel√≠culas disponibles)");
    } else {
      for (int i = 0; i < peliculas.length; i++) {
        print("      ${i + 1}. ${peliculas[i]}");
      }
    }
  });
  
  // Estad√≠sticas adicionales
  int totalPeliculas = catalogoStreaming.values
      .map((lista) => lista.length)
      .reduce((a, b) => a + b);
  
}

class Pelicula {
  String titulo;
  int anioEstreno;
  
  Pelicula(this.titulo, this.anioEstreno);
  
  @override
  String toString() {
    return '$titulo ($anioEstreno)';
  }
}