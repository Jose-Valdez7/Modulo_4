// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  username  String   @unique
  email     String?  @unique
  password  String
  name      String
  role      UserRole @default(ESTUDIANTE)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relaciones
  loans     Loan[] @relation("UserLoans")
  createdBy Loan[] @relation("CreatedBy")

  @@map("users")
}

model Book {
  id             String   @id @default(cuid())
  title          String
  author         String
  isbn           String   @unique
  description    String?
  category       String
  publishedYear  Int
  stock          Int      @default(0)
  availableStock Int      @default(0)
  isActive       Boolean  @default(true)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Relaciones
  loans Loan[]

  @@map("books")
}

model Loan {
  id          String     @id @default(cuid())
  bookId      String
  userId      String
  createdById String
  loanDate    DateTime   @default(now())
  dueDate     DateTime
  returnDate  DateTime?
  status      LoanStatus @default(ACTIVO)
  notes       String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  // Relaciones
  book      Book @relation(fields: [bookId], references: [id], onDelete: Cascade)
  user      User @relation("UserLoans", fields: [userId], references: [id], onDelete: Cascade)
  createdBy User @relation("CreatedBy", fields: [createdById], references: [id], onDelete: Cascade)

  @@map("loans")
}

enum UserRole {
  BIBLIOTECARIO
  ESTUDIANTE
}

enum LoanStatus {
  ACTIVO
  DEVUELTO
  VENCIDO
  PERDIDO
}
